a <- 2
install.packages("dplyr")
library(dplyr)
library(readr)
mi_df_unido <- read_delim("C:/Users/manue/Fvagconsulting Dropbox/Projects/Farmworth/03tasks/03.02_task/03.02.01_data/mi_df_unido.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(mi_df_unido)
install.packages("psych")
library(psych)
install.packages("scatterplot3d")
library(scatterplot3d)
install.packages("readxl")
# SECCION A ---------------------------------------------------------------
p <- as.Date("2022-08-22")
q <- as.Date("2019-04-21")
r <- as.Date("2023-03-16")
s <- as.Date("2021-06-16")
t <- as.Date("2020-04-18")
Nombres <- c("manuel", "daniel", "roberto", "alfonso", "jaime", "ignacio", "andres", "maximiliano", "patricio",
"josue", "alejandro", "felipe", "Tulio", "humberto","nelson")
"Horas extras diarias" <- c(6,8,9,5,2,4,7,1,2,3,6,5,3,2,1)
"Horas de trabajo semanales" <- c(48,56,52,49,60,48,58,49,50,46,48,49,40,50,66) #Horas semanales
"Comuna de residencia"<- c("maipu","maipu","pudahuel","cerrillos","lampa","san miguel","quilicura","quilicura","san miguel","el castillo","santiago","lampa","el bosque","la pintana","ñuñoa") #comuna de residencia
"Cargo"<- c("Mecanico tecnico","Mecanico Lider","Electrico","Supervisor","Mecanico asistente","Mecanico tecnico","Mecanico Lider","Electrico","Supervisor","Mecanico asistente","Mecanico tecnico","Mecanico Lider","Electrico","Supervisor","Mecanico asistente") #cargos
"Antiguedad laboral" <- c(2,5,1,3,4,2,5,1,3,4,2,5,1,3,4) #antiguedad laboral
"Sueldo base"<- c(700000,1500000,1000000,2000000,500000,700000,1500000,1000000,2000000,500000,700000,1500000,1000000,2000000,500000) #sueldo base
"Ingreso a la empresa"<- c(p,q,r,s,t,p,q,r,s,t,p,q,r,s,t)
trabajadoresdestacados <- data.frame(Nombres,`Horas extras diarias`,`Horas de trabajo semanales`,`Comuna de residencia`,Cargo,`Antiguedad laboral`,
`Sueldo base`,`Ingreso a la empresa`)
View(trabajadoresdestacados)
trabajadoresdestacados <- data.frame(Nombres,`Horas extras diarias`,`Horas de trabajo semanales`,`Comuna de residencia`,Cargo,`Antiguedad laboral`,
`Sueldo base`,`Ingreso a la empresa`)
trabajadoresdestacadosR <- data.frame(rbind(Nombres,`Horas extras diarias`,`Horas de trabajo semanales`,`Comuna de residencia`,Cargo,`Antiguedad laboral`,
`Sueldo base`,`Ingreso a la empresa`))
View(trabajadoresdestacadosR)
install.packages("readxl")
library(readxl)
library(dplyr)
library(ggplot2)
library(moments)
auto_peso_consumo <- read_excel("C:/Users/manue/OneDrive
- Universidad Alberto Hurtado/8vo_semestre/
ayu_econometria/data/auto_peso_consumo_mr.xlsx")
auto_peso_consumo_mr <- read_excel("C:/Users/manue/OneDrive - Universidad Alberto Hurtado/8vo_semestre/ayu_econometria/data/auto_peso_consumo_mr.xlsx")
View(auto_peso_consumo)
View(auto_peso_consumo_mr)
auto_peso_consumo_mr <- read_excel("C:/Users/manue/OneDrive - Universidad Alberto Hurtado/8vo_semestre/ayu_econometria/data/auto_peso_consumo_mr.xlsx")
View(auto_peso_consumo_mr)
auto_peso_consumo <- read_excel("C:/Users/manue/OneDrive - Universidad Alberto Hurtado/8vo_semestre/ayu_econometria/data/auto_peso_consumo_mr.xlsx")
estadisticas <- auto_peso_consumo %>%
summarise(
# Medidas de tendencia central
media_peso = mean(peso_libras, na.rm = TRUE),        # Promedio del peso
mediana_peso = median(peso_libras, na.rm = TRUE),    # Valor central del peso
# Medidas de dispersión
var_peso = var(peso_libras, na.rm = TRUE),           # Varianza
sd_peso = sd(peso_libras, na.rm = TRUE),             # Desviación estándar
# Valores extremos
min_peso = min(peso_libras, na.rm = TRUE),           # Mínimo
max_peso = max(peso_libras, na.rm = TRUE),           # Máximo
# Cuartiles
q25_peso = quantile(peso_libras, 0.25, na.rm = TRUE),# 1er cuartil (25%)
q75_peso = quantile(peso_libras, 0.75, na.rm = TRUE),# 3er cuartil (75%)
# Forma de la distribución
curtosis_peso = kurtosis(peso_libras, na.rm = TRUE), # Curtosis: qué tan “picuda” o “achatada” es la distribución
asimetria_peso = skewness(peso_libras, na.rm = TRUE),# Asimetría: hacia qué lado se sesga la distribución
# Repetimos lo mismo para consumo
media_consumo = mean(consumo_millas_por_galon, na.rm = TRUE),
mediana_consumo = median(consumo_millas_por_galon, na.rm = TRUE),
var_consumo = var(consumo_millas_por_galon, na.rm = TRUE),
sd_consumo = sd(consumo_millas_por_galon, na.rm = TRUE),
min_consumo = min(consumo_millas_por_galon, na.rm = TRUE),
max_consumo = max(consumo_millas_por_galon, na.rm = TRUE),
q25_consumo = quantile(consumo_millas_por_galon, 0.25, na.rm = TRUE),
q75_consumo = quantile(consumo_millas_por_galon, 0.75, na.rm = TRUE),
curtosis_consumo = kurtosis(consumo_millas_por_galon, na.rm = TRUE),
asimetria_consumo = skewness(consumo_millas_por_galon, na.rm = TRUE)
)
View(estadisticas)
estadistica_2 <- auto_peso_consumo %>%
summarise(media_consumo = mean(consumo_millas_por_galon, na.rm = TRUE),
mediana_consumo = median(consumo_millas_por_galon, na.rm = TRUE),
var_consumo = var(consumo_millas_por_galon, na.rm = TRUE),
sd_consumo = sd(consumo_millas_por_galon, na.rm = TRUE),
min_consumo = min(consumo_millas_por_galon, na.rm = TRUE),
max_consumo = max(consumo_millas_por_galon, na.rm = TRUE),
q25_consumo = quantile(consumo_millas_por_galon, 0.25, na.rm = TRUE),
q75_consumo = quantile(consumo_millas_por_galon, 0.75, na.rm = TRUE),
curtosis_consumo = kurtosis(consumo_millas_por_galon, na.rm = TRUE),
asimetria_consumo = skewness(consumo_millas_por_galon, na.rm = TRUE)
)
View(estadistica_2)
# Nos permiten ver la distribución de los datos
ggplot(auto_peso_consumo, aes(x = peso_libras)) +
geom_histogram(binwidth = 500, fill = "skyblue", color = "black") +
labs(title = "Distribución del peso (libras)", x = "Peso en libras", y = "Frecuencia")
ggplot(auto_peso_consumo, aes(x = consumo_millas_por_galon)) +
geom_histogram(binwidth = 2, fill = "lightgreen", color = "black") +
labs(title = "Distribución del consumo (mpg)", x = "Consumo (millas/galón)", y = "Frecuencia")
ggplot(auto_peso_consumo, aes(y = peso_libras)) +
geom_boxplot(fill = "orange") +
labs(title = "Boxplot del peso", y = "Peso en libras")
ggplot(auto_peso_consumo, aes(y = consumo_millas_por_galon)) +
geom_boxplot(fill = "purple") +
labs(title = "Boxplot del consumo", y = "Consumo (mpg)")
ggplot(auto_peso_consumo, aes(x = peso_libras, y = consumo_millas_por_galon)) +
geom_point(color = "darkblue") +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Línea de regresión
labs(title = "Relación entre peso y consumo", x = "Peso (libras)", y = "Consumo (mpg)")
# Limpiar el entorno de trabajo
rm(list = ls())   # Elimina todos los objetos de la sesión
# Cargar librerías necesarias
install.packages("car")       # Para VIF y otras utilidades
install.packages("lmtest")    # Para test de heterocedasticidad
install.packages("corrplot")  # Para gráficos de correlación
library(car)
library(lmtest)
library(corrplot)
data("mtcars")
head(mtcars)  # Muestra las primeras filas de la base
modelo <- lm(mpg ~ wt + hp, data = mtcars)
summary(modelo)
# Cargar librerías necesarias
install.packages("car")       # Para VIF y otras utilidades
library(car)
library(lmtest)
library(corrplot)
data("mtcars")
View(mtcars)
View(mtcars)
(mtcars)
modelo <- lm(mpg ~ wt + hp, data = mtcars)
summary(modelo)
cor_matrix <- cor(mtcars[, c("wt", "hp")])
print(cor_matrix)
# Graficar la matriz de correlación
corrplot(cor_matrix, method = "number", type = "upper")
bptest(modelo)
anova(modelo)
